datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
  userCreatedCategories Category[] @relation("category_created_by_user")
  userUpdatedCategories Category[] @relation("category_updated_by_user")
  userCreatedTechniques Technique[] @relation("technique_created_by_user")
  userUpdatedTechniques Technique[] @relation("technique_updated_by_user")
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id        String @id @default(cuid())
  title     String
  body      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
}

model Category {
  id        String @id @default(cuid())
  slug      String @unique
  name      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  createdByUserId String
  updatedByUserId String

  createdBy User @relation("category_created_by_user", fields: [createdByUserId], references: [id])
  updatedBy User @relation("category_updated_by_user", fields: [updatedByUserId], references: [id])

  techniques Technique[] @relation("technique_category")
  categoryImage String?
}

model Technique {
  id          String @id @default(cuid())
  name        String
  slug        String @unique
  details     String?
  isBlueBelt  Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdByUserId String
  updatedByUserId String

  createdBy User @relation("technique_created_by_user", fields: [createdByUserId], references: [id])
  updatedBy User @relation("technique_updated_by_user", fields: [updatedByUserId], references: [id])

  category    Category @relation("technique_category", fields: [categoryId], references: [id])
  categoryId  String

  tags TechniqueTag[]
  techniqueImage String?
  youtubeVideoId String?
}

model Tag {
  id String @id @default(cuid())
  name String

  techniques TechniqueTag[]
}

model TechniqueTag {
  tag Tag @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId String
  technique Technique @relation(fields: [techniqueId], references: [id], onDelete: Cascade)
  techniqueId String

  @@id ([tagId, techniqueId])
}