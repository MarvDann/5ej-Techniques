datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
  categories Category[]
  techniques Technique[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id        String @id @default(cuid())
  title     String
  body      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
}

model Category {
  id        String @id @default(cuid())
  name      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdBy User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String

  techniques Technique[]
}

model Technique {
  id          String @id @default(cuid())
  name        String
  descrition  String
  isBlueBelt  Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdBy User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String

  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String

  tags TechniqueTag[]
}

model Tag {
  id String @id @default(cuid())
  name String

  techniques TechniqueTag[]
}

model TechniqueTag {
  tag Tag @relation(fields: [tagId], references: [id])
  tagId String
  technique Technique @relation(fields: [techniqueId], references: [id])
  techniqueId String

  @@id ([tagId, techniqueId])
}